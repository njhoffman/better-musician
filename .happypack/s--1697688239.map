{"version":3,"sources":["src/main.js"],"names":["initialState","window","___INITIAL_STATE__","store","MOUNT_NODE","document","getElementById","render","routes","require","default","dispatch","apiUrl","signOutPath","emailSignInPath","emailRegistrationPath","accountUpdatePath","accountDeletePath","passwordResetPath","passwordUpdatePath","tokenValidationPath","authProviderPaths","github","facebook","google","serverSideRendering","clientOnly","then","__DEV__","module","hot","renderApp","renderError","error","RedBox","accept","unmountComponentAtNode"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AAGA;;;;;;AAGA;AACA;AACA;;AAGA;AACA;AACA;;;AAXA;AAYA,IAAMA,eAAeC,OAAOC,kBAA5B;AACA,IAAMC,QAAQ,2BAAYH,YAAZ,CAAd;;AAEA;AACA;AACA;AACA,IAAMI,aAAaC,SAASC,cAAT,CAAwB,MAAxB,CAAnB;;AAEA,IAAIC,SAAS,kBAAM;AACjB,MAAMC,SAASC,QAAQ,gBAAR,EAA0BC,OAA1B,CAAkCP,KAAlC,CAAf;AACA;AACAA,QAAMQ,QAAN,CAAe,0BAAU;AACvBC,YAAuB,2BADA;AAEvBC,iBAAuB,eAFA;AAGvBC,qBAAuB,cAHA;AAIvBC,2BAAuB,iBAJA;AAKvBC,uBAAuB,eALA;AAMvBC,uBAAuB,eANA;AAOvBC,uBAAuB,uBAPA;AAQvBC,wBAAuB,wBARA;AASvBC,yBAAuB,uBATA;AAUvBC,uBAAmB;AACjBC,cAAW,qBADM;AAEjBC,gBAAW,uBAFM;AAGjBC,cAAW;AAHM;AAVI,GAAV,EAeZ;AACDC,yBAAqB,KADpB;AAEDC,gBAAqB;AACrB;AAHC,GAfY,CAAf,EAoBGC,IApBH,CAoBQ,YAAM;AACV;AACA;;AAEA,uBAASpB,MAAT,CACE,wDAAc,OAAOJ,KAArB,EAA4B,QAAQK,MAApC,GADF,EAEEJ,UAFF;AAIH,GA5BD;AA6BD,CAhCD;;AAkCA;AACA,IAAIwB,OAAJ,EAAa;AACX,MAAIC,OAAOC,GAAX,EAAgB;AAAA;AACd;AACA,UAAMC,YAAYxB,MAAlB;AACA,UAAMyB,cAAc,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC7B,YAAMC,SAASzB,QAAQ,cAAR,EAAwBC,OAAvC;;AAEA,2BAASH,MAAT,CAAgB,8BAAC,MAAD,IAAQ,OAAO0B,KAAf,GAAhB,EAA0C7B,UAA1C;AACD,OAJD;;AAMA;AACAG,eAAS,kBAAM;AACb,YAAI;AACFwB;AACD,SAFD,CAEE,OAAOE,KAAP,EAAc;AACdD,sBAAYC,KAAZ;AACD;AACF,OAND;;AAQA;AACAJ,aAAOC,GAAP,CAAWK,MAAX,CAAkB,gBAAlB,EAAoC;AAAA,eAClC,4BAAa,YAAM;AACjB,6BAASC,sBAAT,CAAgChC,UAAhC;AACAG;AACD,SAHD,CADkC;AAAA,OAApC;AAnBc;AAyBf;AACF;;AAED;AACA;AACA;AACAA","file":"main.js","sourceRoot":"/home/vagrant/projects/instrumental","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport createStore from './store/createStore';\nimport AppContainer from './containers/AppContainer';\nimport { configure } from './store/auth/actions/configure';\n\n// import 'material-design-lite/src/typography/_typography.scss';\nimport injectTapEventPlugin from 'react-tap-event-plugin';\n\n\n// Needed for onTouchTap\n// http://stackoverflow.com/a/34015469/988941\ninjectTapEventPlugin();\n\n\n// ========================================================\n// Store Instantiation\n// ========================================================\nconst initialState = window.___INITIAL_STATE__;\nconst store = createStore(initialState);\n\n// ========================================================\n// Render Setup\n// ========================================================\nconst MOUNT_NODE = document.getElementById('root');\n\nlet render = () => {\n  const routes = require('./routes/index').default(store);\n  // trigger auth base config\n  store.dispatch(configure({\n    apiUrl:                'http://localhost:3000/api',\n    signOutPath:           '/users/logout',\n    emailSignInPath:       '/users/login',\n    emailRegistrationPath: '/users/register',\n    accountUpdatePath:     '/users/update',\n    accountDeletePath:     '/users/delete',\n    passwordResetPath:     '/users/password_reset',\n    passwordUpdatePath:    '/users/password_update',\n    tokenValidationPath:   '/users/validate_token',\n    authProviderPaths: {\n      github:    '/users/login/github',\n      facebook:  '/users/login/facebook',\n      google:    '/users/login/google_oauth2'\n    }\n  }, {\n    serverSideRendering: false,\n    clientOnly:          true\n    // cleanSession:        true\n    }\n  )).then(() => {\n      // your store should now have the current user. now render your\n      // app to the DOM. see the demo app for a more complete example.\n\n      ReactDOM.render(\n        <AppContainer store={store} routes={routes} />,\n        MOUNT_NODE\n      );\n  });\n};\n\n// This code is excluded from production bundle\nif (__DEV__) {\n  if (module.hot) {\n    // Development render functions\n    const renderApp = render;\n    const renderError = (error) => {\n      const RedBox = require('redbox-react').default;\n\n      ReactDOM.render(<RedBox error={error} />, MOUNT_NODE);\n    };\n\n    // Wrap render in try/catch\n    render = () => {\n      try {\n        renderApp();\n      } catch (error) {\n        renderError(error);\n      }\n    };\n\n    // Setup hot module replacement\n    module.hot.accept('./routes/index', () =>\n      setImmediate(() => {\n        ReactDOM.unmountComponentAtNode(MOUNT_NODE);\n        render();\n      })\n    );\n  }\n}\n\n// ========================================================\n// Go!\n// ========================================================\nrender();\n"]}