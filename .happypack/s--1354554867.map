{"version":3,"sources":["src/routes/Register/components/EmailSignUpForm.js"],"names":["props","endpoint","auth","getIn","event","console","log","preventDefault","formData","registerForm","values","dispatch","emailSignUp","getEndpoint","then","next","catch","disabled","errors","clear","overflow","handleSubmit","bind","map","error","inputProps","email","password","passwordConfirmation","float","submit","Component","propTypes","string","func","shape","object","defaultProps","mapStateToProps","state","form","register","EmailSignUpForm"],"mappings":"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","file":"EmailSignUpForm.js","sourceRoot":"/home/vagrant/projects/instrumental","sourcesContent":["import React, { PropTypes } from \"react\";\nimport ContentSend from \"material-ui/svg-icons/content/send\";\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport muiThemeable from 'material-ui/styles/muiThemeable';\n\nimport ButtonLoader from './ButtonLoader';\nimport { RenderTextField } from 'components/Field';\nimport { emailSignUp } from 'store/auth/actions/email-sign-up';\n\nclass EmailSignUpForm extends React.Component {\n  static propTypes = {\n    endpoint: PropTypes.string,\n    next: PropTypes.func,\n    emailSignUp: PropTypes.func,\n    inputProps: PropTypes.shape({\n      email: PropTypes.object,\n      password: PropTypes.object,\n      passwordConfirmation: PropTypes.object,\n      submit: PropTypes.object\n    })\n  };\n\n  static defaultProps = {\n    next: () => {},\n    inputProps: {\n      email: {},\n      password: {},\n      submit: {}\n    }\n  };\n\n  getEndpoint () {\n    return (\n      this.props.endpoint ||\n      this.props.auth.getIn([\"configure\", \"currentEndpointKey\"]) ||\n      this.props.auth.getIn([\"configure\", \"defaultEndpointKey\"])\n    );\n  }\n\n  handleSubmit (event) {\n    console.log(\"@-->handling submit\");\n    event.preventDefault();\n\n    let formData = this.props.registerForm.values;\n    this.props.dispatch(this.props.emailSignUp(formData, this.getEndpoint()))\n      .then(this.props.next)\n      .catch(() => {});\n  }\n\n  render () {\n    let disabled = (\n      this.props.auth.getIn([\"user\", \"isSignedIn\"]) ||\n      this.props.auth.getIn([\"emailSignUp\", this.getEndpoint(), \"loading\"])\n    );\n\n    const errors = this.props.auth.getIn([\"emailSignUp\", this.getEndpoint(), \"errors\"]);\n\n    return (\n      <form className='redux-auth email-sign-up-form clearfix'\n        style={{clear: \"both\", overflow: \"hidden\"}}\n        onSubmit={this.handleSubmit.bind(this)}>\n\n        <div>\n          { errors && errors.map(error =>\n            <p>{error}</p>\n          )}\n        </div>\n\n        <Field\n          component={RenderTextField}\n          floatingLabelText=\"Email\"\n          name=\"email-sign-up-email\"\n          disabled={disabled}\n          {...this.props.inputProps.email} />\n\n        <Field type=\"password\"\n          component={RenderTextField}\n          floatingLabelText=\"Password\"\n          name=\"email-sign-up-password\"\n          disabled={disabled}\n          {...this.props.inputProps.password} />\n\n        <Field type=\"password\"\n          component={RenderTextField}\n          floatingLabelText=\"Password Confirmation\"\n          name=\"email-sign-up-password-confirmation\"\n          disabled={disabled}\n          {...this.props.inputProps.passwordConfirmation} />\n\n        <ButtonLoader\n          loading={this.props.auth.getIn([\"emailSignUp\", this.getEndpoint(), \"loading\"])}\n          type=\"submit\"\n          name=\"email-sign-up-submit\"\n          primary={true}\n          style={{float: \"right\"}}\n          icon={ContentSend}\n          disabled={disabled}\n          onClick={this.handleSubmit.bind(this)}\n          {...this.props.inputProps.submit}>\n          Sign Up\n        </ButtonLoader>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.auth,\n    registerForm: state.form.register,\n    emailSignUp: emailSignUp\n  };\n}\n\nexport default connect(mapStateToProps)( muiThemeable()(reduxForm({ form: 'register' })(EmailSignUpForm)) );\n"]}