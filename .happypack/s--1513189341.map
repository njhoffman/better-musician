{"version":3,"sources":["src/store/auth/reducers/oauth-sign-in.js"],"names":["A","initialState","loading","errors","fromJS","state","endpoints","merge","reduce","coll","k","OAUTH_SIGN_IN_START","endpoint","setIn","OAUTH_SIGN_IN_COMPLETE","mergeDeep","OAUTH_SIGN_IN_ERROR"],"mappings":";;;;;;;;;;;;AAAA;;;;AACA;;AACA;;IAAYA,C;;AACZ;;;;;;AAEA,IAAMC,eAAe;AACnBC,WAAS,KADU;AAEnBC,UAAQ;AAFW,CAArB;;kBAKe,qCAAc,oBAAUC,MAAV,CAAiB,EAAjB,CAAd,oGACQ,UAACC,KAAD;AAAA,MAASC,SAAT,QAASA,SAAT;AAAA,SAAwBD,MAAME,KAAN,CAAYD,UAAUE,MAAV,CAAiB,UAACC,IAAD,EAAOC,CAAP,EAAa;AACrFD,SAAKC,CAAL,IAAU,oBAAUN,MAAV,CAAiBH,YAAjB,CAAV;AACA,WAAOQ,IAAP;AACD,GAHwD,EAGtD,EAHsD,CAAZ,CAAxB;AAAA,CADR,iDAMZT,EAAEW,mBANU,EAMY,UAACN,KAAD;AAAA,MAASO,QAAT,SAASA,QAAT;AAAA,SAAuBP,MAAMQ,KAAN,CAAY,CAACD,QAAD,EAAW,SAAX,CAAZ,EAAmC,IAAnC,CAAvB;AAAA,CANZ,iDAQZZ,EAAEc,sBARU,EAQe,UAACT,KAAD;AAAA,MAASO,QAAT,SAASA,QAAT;AAAA,SAAuBP,MAAMU,SAAN,mCAChDH,QADgD,EACrC;AACVV,aAAS,KADC;AAEVC,YAAQ;AAFE,GADqC,EAAvB;AAAA,CARf,iDAeZH,EAAEgB,mBAfU,EAeY,UAACX,KAAD;AAAA,MAASO,QAAT,SAASA,QAAT;AAAA,MAAmBT,MAAnB,SAAmBA,MAAnB;AAAA,SAA+BE,MAAMU,SAAN,mCACrDH,QADqD,EAC1C;AACVV,aAAS,KADC;AAEVC;AAFU,GAD0C,EAA/B;AAAA,CAfZ,mB","file":"oauth-sign-in.js","sourceRoot":"/home/vagrant/projects/instrumental","sourcesContent":["import Immutable from \"immutable\";\r\nimport { createReducer } from \"redux-immutablejs\";\r\nimport * as A from \"../actions/oauth-sign-in\";\r\nimport { SET_ENDPOINT_KEYS } from \"../actions/configure\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errors: null\r\n};\r\n\r\nexport default createReducer(Immutable.fromJS({}), {\r\n  [SET_ENDPOINT_KEYS]: (state, {endpoints}) => state.merge(endpoints.reduce((coll, k) => {\r\n    coll[k] = Immutable.fromJS(initialState);\r\n    return coll;\r\n  }, {})),\r\n\r\n  [A.OAUTH_SIGN_IN_START]: (state, {endpoint}) => state.setIn([endpoint, \"loading\"], true),\r\n\r\n  [A.OAUTH_SIGN_IN_COMPLETE]: (state, {endpoint}) => state.mergeDeep({\r\n    [endpoint]: {\r\n      loading: false,\r\n      errors: null\r\n    }\r\n  }),\r\n\r\n  [A.OAUTH_SIGN_IN_ERROR]: (state, {endpoint, errors}) => state.mergeDeep({\r\n    [endpoint]: {\r\n      loading: false,\r\n      errors\r\n    }\r\n  })\r\n});\r\n"]}