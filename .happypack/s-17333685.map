{"version":3,"sources":["src/routes/Songs/modules/model.js"],"names":["BaseModel","data","Model","forEach","create","d","Song","title","action","session","payload","type","newSong","song","props","all","delete","loadData","withId","modelName","fields","artist","instrument","genres","shallowFields","id","difficulty","progress","Artist","fullName","lastName","firstName","name","icon","Filter","Genre","Instrument","exports","models"],"mappings":"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","file":"model.js","sourceRoot":"/home/vagrant/projects/instrumental","sourcesContent":["import {fk, many, Model, ORM as Schema} from 'redux-orm';\nimport {\n  ADD_SONG,\n  SET_CURRENT_SONG,\n\tFETCH_SONGS,\n  SHOW_SONGS,\n  DELETE_SONG,\n  UPDATE_SONG\n} from './actionTypes';\n\n\nclass BaseModel extends Model {\n  static loadData(data, Model) {\n    data.forEach(d => {\n      this.create(d);\n    });\n  }\n}\n\n// ------------------------------------\n// Song\n// ------------------------------------\n\nclass Song extends BaseModel {\n  static reducer(action, Song, session) {\n    const { payload, type } = action;\n    switch (type) {\n      case ADD_SONG:\n        const newSong = action.payload.song;\n        const props = Object.assign({}, payload, { newSong });\n        Song.create(props);\n        break;\n      case 'SONGS_REQUEST':\n        // remove all songs when fetching\n        this.all().delete();\n        break;\n      case 'LOAD_SONGS':\n        this.loadData(action.payload, Song);\n        break;\n      case DELETE_SONG:\n        Song.withId(payload).delete();\n        break;\n      case UPDATE_SONG:\n        break;\n    }\n  }\n  toString() {\n    return `Song: ${this.title}`;\n  }\n}\n\nSong.modelName = 'Song';\n\nSong.fields = {\n  artist:     fk(\"Artist\"),\n  instrument: fk(\"Instrument\"),\n  genres:     many(\"Genre\")\n};\n\nSong.shallowFields = {\n  id:         'number',\n  title:      'string',\n  difficulty: 'number',\n  progress:   'number'\n};\n\n// ------------------------------------\n// Artist\n// ------------------------------------\n\n\nclass Artist extends BaseModel {\n  constructor(artist) {\n    artist.fullName = artist.lastName + ', ' + artist.firstName;\n    super(artist);\n  }\n  static reducer(action, Artist, session) {\n    const { payload, type } = action;\n    switch (type) {\n      case 'SONGS_REQUEST':\n        // remove all songs when fetching\n        this.all().delete();\n        break;\n      case 'LOAD_ARTISTS':\n        this.loadData(action.payload, Artist);\n        break;\n      default:\n        break;\n    }\n  }\n  toString() {\n    return `Artist: ${this.lastName}`;\n  }\n}\n\nArtist.modelName = 'Artist';\n\nArtist.fields = {};\n\nArtist.shallowFields = {\n  id: 'number',\n  name: 'string',\n  icon: 'string'\n};\n\n\n// ------------------------------------\n// Filter\n// ------------------------------------\n\n\nclass Filter extends BaseModel {\n  static reducer(action, Filter, session) {\n    const { payload, type } = action;\n    switch (type) {\n      default:\n        break;\n    }\n  }\n  toString() {\n    return `Filter: ${this.name}`;\n  }\n}\n\nFilter.modelName = 'Filter';\n\nFilter.fields = { };\n\nFilter.shallowFields = {\n  id: 'number',\n  name: 'string'\n};\n\n// ------------------------------------\n// Genre\n// ------------------------------------\n\nclass Genre extends BaseModel {\n  static reducer(action, Genre, session) {\n    const { payload, type } = action;\n    switch (type) {\n      case 'SONGS_REQUEST':\n        // remove all songs when fetching\n        this.all().delete();\n        break;\n      case 'LOAD_GENRES':\n        this.loadData(action.payload, this);\n        break;\n      default:\n        break;\n    }\n  }\n  toString() {\n    return `Genre: ${this.name}`;\n  }\n}\n\nGenre.modelName = 'Genre';\n\nGenre.fields = { };\n\nGenre.shallowFields = {\n  id: 'number',\n  name: 'string',\n  icon: 'string'\n};\n\n// ------------------------------------\n// Instruments\n// ------------------------------------\n\nclass Instrument extends BaseModel {\n  static reducer(action, Instrument, session) {\n    const { payload, type } = action;\n    switch (type) {\n      case 'SONGS_REQUEST':\n        // remove all songs when fetching\n        this.all().delete();\n        break;\n      case 'LOAD_INSTRUMENTS':\n        this.loadData(action.payload, this);\n        break;\n      default:\n        break;\n    }\n  }\n  toString() {\n    return `Instrument: ${this.name}`;\n  }\n}\n\nInstrument.modelName = 'Instrument';\n\nInstrument.fields = {};\n\nInstrument.shallowFields = {\n  id: 'number',\n  name: 'string',\n  icon: 'string'\n};\n\n\nexports.Song = Song;\nexports.Artist = Artist;\nexports.Instrument = Instrument;\nexports.Genre = Genre;\nexports.Filter = Filter;\nexport const models = [Song, Filter, Genre, Instrument, Artist];\n"]}