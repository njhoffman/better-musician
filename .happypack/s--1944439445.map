{"version":3,"sources":["src/store/auth/utils/session-storage.js"],"names":["setCurrentSettings","getCurrentSettings","setCurrentEndpoint","getCurrentEndpoint","setCurrentEndpointKey","getCurrentEndpointKey","setDefaultEndpointKey","getDefaultEndpointKey","resetConfig","destroySession","getInitialEndpointKey","getSessionEndpointKey","getSessionEndpoint","getDestroyAccountUrl","getSignOutUrl","getEmailSignInUrl","getEmailSignUpUrl","getPasswordResetRequestUrl","getPasswordUpdateUrl","getTokenValidationPath","getOAuthUrl","getConfirmationSuccessUrl","getPasswordResetRedirectUrl","getApiUrl","getTokenFormat","removeData","persistData","retrieveData","C","root","Function","eval","authState","currentSettings","currentEndpoint","defaultEndpointKey","s","e","k","SAVED_CONFIG_KEY","DEFAULT_CONFIG_KEY","sessionKeys","SAVED_CREDS_KEY","key","localStorage","removeItem","erase","path","cookiePath","unescapeQuotes","val","replace","get","getItem","endpointKey","accountDeletePath","signOutPath","emailSignInPath","emailRegistrationPath","passwordResetPath","passwordUpdatePath","tokenValidationPath","provider","params","oAuthUrl","authProviderPaths","encodeURIComponent","location","href","confirmationSuccessUrl","configKey","apiUrl","tokenFormat","storage","setItem","res","set","expires","cookieExpiry","JSON","parse","err"],"mappings":"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","file":"session-storage.js","sourceRoot":"/home/vagrant/projects/instrumental","sourcesContent":["import Cookies from \"browser-cookies\";\nimport * as C from \"./constants\";\n\n\n// even though this code shouldn't be used server-side, node will throw\n// errors if \"window\" is used\nvar root = Function(\"return this\")() || (42, eval)(\"this\");\n\n// stateful variables that persist throughout session\nroot.authState = {\n  currentSettings:    {},\n  currentEndpoint:    {},\n  defaultEndpointKey: null\n}\n\nexport function setCurrentSettings (s) {\n  root.authState.currentSettings = s;\n}\n\nexport function getCurrentSettings () {\n  return root.authState.currentSettings;\n}\n\nexport function setCurrentEndpoint (e) {\n  root.authState.currentEndpoint = e;\n}\n\nexport function getCurrentEndpoint () {\n  return root.authState.currentEndpoint;\n}\n\nexport function setCurrentEndpointKey (k) {\n  persistData(C.SAVED_CONFIG_KEY, k || getDefaultEndpointKey());\n}\n\nexport function getCurrentEndpointKey () {\n  return retrieveData(C.SAVED_CONFIG_KEY) || getDefaultEndpointKey();\n}\n\nexport function setDefaultEndpointKey (k) {\n  persistData(C.DEFAULT_CONFIG_KEY, k);\n}\n\nexport function getDefaultEndpointKey () {\n  return retrieveData(C.DEFAULT_CONFIG_KEY);\n}\n\n// reset stateful variables\nexport function resetConfig () {\n  root.authState = root.authState || {};\n  root.authState.currentSettings    = {};\n  root.authState.currentEndpoint    = {};\n  destroySession();\n}\n\nexport function destroySession () {\n  var sessionKeys = [\n    C.SAVED_CREDS_KEY,\n    C.SAVED_CONFIG_KEY\n  ];\n\n  for (var key in sessionKeys) {\n    key = sessionKeys[key];\n\n    // kill all local storage keys\n    if (root.localStorage) {\n      root.localStorage.removeItem(key);\n    }\n\n    // remove from base path in case config is not specified\n    Cookies.erase(key, {\n      path: root.authState.currentSettings.cookiePath || \"/\"\n    });\n  }\n}\n\nfunction unescapeQuotes (val) {\n  return val && val.replace(/(\"|')/g, \"\");\n};\n\n\nexport function getInitialEndpointKey () {\n  return unescapeQuotes(\n    Cookies.get(C.SAVED_CONFIG_KEY) ||\n    (root.localStorage && root.localStorage.getItem(C.SAVED_CONFIG_KEY))\n  );\n}\n\n// TODO: make this really work\nexport function getSessionEndpointKey (k) {\n  let key = k || getCurrentEndpointKey();\n  if (!key) {\n    throw \"You must configure redux-auth before use.\";\n  } else {\n    return key;\n  }\n}\n\nexport function getSessionEndpoint (k) {\n  return getCurrentEndpoint()[getSessionEndpointKey(k)];\n}\n\n// only should work for current session\nexport function getDestroyAccountUrl (endpointKey) {\n  return `${getApiUrl(endpointKey)}${getSessionEndpoint(endpointKey).accountDeletePath}`\n}\n\n// only should work for current session\nexport function getSignOutUrl (endpointKey) {\n  return `${getApiUrl(endpointKey)}${getSessionEndpoint(endpointKey).signOutPath}`\n}\n\nexport function getEmailSignInUrl (endpointKey) {\n  return `${getApiUrl(endpointKey)}${getSessionEndpoint(endpointKey).emailSignInPath}`\n}\n\nexport function getEmailSignUpUrl (endpointKey) {\n  return `${getApiUrl(endpointKey)}${getSessionEndpoint(endpointKey).emailRegistrationPath}?config_name=${endpointKey}`\n}\n\nexport function getPasswordResetRequestUrl (endpointKey) {\n  return `${getApiUrl(endpointKey)}${getSessionEndpoint(endpointKey).passwordResetPath}?config_name=${endpointKey}`\n}\n\nexport function getPasswordUpdateUrl (endpointKey) {\n  return `${getApiUrl(endpointKey)}${getSessionEndpoint(endpointKey).passwordUpdatePath}`\n}\n\nexport function getTokenValidationPath (endpointKey) {\n  return `${getApiUrl(endpointKey)}${getSessionEndpoint(endpointKey).tokenValidationPath}`\n}\n\nexport function getOAuthUrl ({provider, params, endpointKey}) {\n  var oAuthUrl = getApiUrl(endpointKey) + getSessionEndpoint(endpointKey).authProviderPaths[provider] +\n    \"?auth_origin_url=\"+encodeURIComponent(root.location.href) +\n    \"&config_name=\"+encodeURIComponent(getSessionEndpointKey(endpointKey));\n\n  if (params) {\n    for(var key in params) {\n      oAuthUrl += \"&\";\n      oAuthUrl += encodeURIComponent(key);\n      oAuthUrl += \"=\";\n      oAuthUrl += encodeURIComponent(params[key]);\n    }\n  }\n\n  return oAuthUrl;\n}\n\nexport function getConfirmationSuccessUrl () {\n  return root.authState.currentSettings.confirmationSuccessUrl();\n}\n\nexport function getPasswordResetRedirectUrl () {\n  return root.authState.currentSettings.confirmationSuccessUrl();\n}\n\nexport function getApiUrl(key) {\n  let configKey = getSessionEndpointKey(key);\n  return root.authState.currentEndpoint[configKey].apiUrl;\n}\n\nexport function getTokenFormat() {\n  return root.authState.currentSettings.tokenFormat;\n}\n\nexport function removeData(key) {\n\n  switch(root.authState.currentSettings.storage) {\n    case \"localStorage\":\n      root.localStorage.removeItem(key);\n      break;\n    default:\n      Cookies.erase(key);\n  }\n}\n\nexport function persistData (key, val) {\n  val = JSON.stringify(val);\n\n  switch (root.authState.currentSettings.storage) {\n    case \"localStorage\":\n      root.localStorage.setItem(key, val);\n      break;\n\n    default:\n      var res = Cookies.set(key, val, {\n        expires: root.authState.currentSettings.cookieExpiry,\n        path:    root.authState.currentSettings.cookiePath\n      });\n      break;\n  }\n};\n\n\nexport function retrieveData (key, storage) {\n  var val = null;\n\n  switch (storage || root.authState.currentSettings.storage) {\n    case \"localStorage\":\n      val = root.localStorage && root.localStorage.getItem(key);\n      break;\n\n    default:\n      val = Cookies.get(key);\n      break;\n  }\n\n  // if value is a simple string, the parser will fail. in that case, simply\n  // unescape the quotes and return the string.\n  try {\n    // return parsed json response\n    return JSON.parse(val);\n  } catch (err) {\n    // unescape quotes\n    return unescapeQuotes(val);\n  }\n};\n"]}