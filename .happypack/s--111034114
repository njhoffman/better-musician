'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AddSongModal = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reduxForm = require('redux-form');

var _Field = require('components/Field');

var _FlatButton = require('material-ui/FlatButton');

var _FlatButton2 = _interopRequireDefault(_FlatButton);

var _Dialog = require('material-ui/Dialog');

var _Dialog2 = _interopRequireDefault(_Dialog);

var _MenuItem = require('material-ui/MenuItem');

var _MenuItem2 = _interopRequireDefault(_MenuItem);

var _muiThemeable = require('material-ui/styles/muiThemeable');

var _muiThemeable2 = _interopRequireDefault(_muiThemeable);

var _AddSong = require('./AddSong.scss');

var _AddSong2 = _interopRequireDefault(_AddSong);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var dialogStyle = {
  width: "300px",
  maxWidth: "none"
};

var validate = function validate(values) {
  var errors = {};
  var requiredFields = ['title', 'artist', 'instrument', 'progress'];
  requiredFields.forEach(function (field) {
    if (!values[field]) {
      errors[field] = 'Required';
    }
  });
  return errors;
};

var AddSongModal = exports.AddSongModal = function AddSongModal(props) {
  var dispatch = props.dispatch,
      addSong = props.addSong;


  var actions = [_react2.default.createElement(_FlatButton2.default, {
    label: 'Cancel',
    primary: true,
    onTouchTap: props.hideModal
  }), _react2.default.createElement(_FlatButton2.default, {
    label: 'Add',
    primary: true,
    keyboardFocused: true,
    onTouchTap: addSong
  })];
  var textColor = props.muiTheme.palette.textColor;

  return _react2.default.createElement(
    _Dialog2.default,
    {
      title: 'Add Song',
      modal: false,
      actions: actions,
      open: props.isOpen,
      onRequestClose: props.hideModal,
      contentStyle: dialogStyle },
    _react2.default.createElement(
      'form',
      { onSubmit: props.addSong },
      _react2.default.createElement(_reduxForm.Field, {
        name: 'title',
        component: _Field.RenderTextField,
        label: 'Song Title' }),
      _react2.default.createElement(_reduxForm.Field, {
        name: 'artist',
        component: _Field.RenderTextField,
        label: 'Song Artist' }),
      _react2.default.createElement(
        _reduxForm.Field,
        { name: 'genre', component: _Field.RenderSelectField, label: 'Song Genre' },
        props.genres && props.genres.map(function (genre) {
          return _react2.default.createElement(_MenuItem2.default, {
            key: genre.id,
            value: genre.id,
            primaryText: genre.name
          });
        })
      ),
      _react2.default.createElement(
        _reduxForm.Field,
        { name: 'instrument', component: _Field.RenderSelectField, label: 'Instrument' },
        props.instruments && props.instruments.map(function (instrument) {
          return _react2.default.createElement(_MenuItem2.default, {
            key: instrument.id,
            value: instrument.id,
            primaryText: instrument.name
          });
        })
      ),
      _react2.default.createElement(_reduxForm.Field, { name: 'difficulty',
        min: 1,
        max: 20,
        step: 1,
        textColor: textColor,
        component: _Field.RenderSliderField,
        label: 'Difficulty' }),
      _react2.default.createElement(_reduxForm.Field, { name: 'progress',
        min: 0,
        max: 4,
        step: 1,
        textColor: textColor,
        component: _Field.RenderSliderField,
        label: 'Progress' })
    )
  );
};

AddSongModal.propTypes = {
  addSong: _react2.default.PropTypes.func,
  genres: _react2.default.PropTypes.array,
  instruments: _react2.default.PropTypes.array,
  hideModal: _react2.default.PropTypes.func,
  isOpen: _react2.default.PropTypes.bool
};

exports.default = (0, _muiThemeable2.default)()((0, _reduxForm.reduxForm)({ form: 'addSongForm', validate: validate })(AddSongModal));