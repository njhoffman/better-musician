{"version":3,"sources":["src/store/auth/actions/destroy-account.js"],"names":["destroyAccountStart","destroyAccountComplete","destroyAccountError","destroyAccount","DESTROY_ACCOUNT_START","DESTROY_ACCOUNT_COMPLETE","DESTROY_ACCOUNT_ERROR","endpoint","type","message","errors","dispatch","method","then","defaultEndpointKey","catch"],"mappings":";;;;;;QASgBA,mB,GAAAA,mB;QAGAC,sB,GAAAA,sB;QAGAC,mB,GAAAA,mB;QAGAC,c,GAAAA,c;;AAlBhB;;AACA;;AACA;;AACA;;;;;;AAEO,IAAMC,wDAA2B,uBAAjC;AACA,IAAMC,8DAA2B,0BAAjC;AACA,IAAMC,wDAA2B,uBAAjC;;AAEA,SAASN,mBAAT,CAA6BO,QAA7B,EAAuC;AAC5C,SAAO,EAAEC,MAAMJ,qBAAR,EAA+BG,kBAA/B,EAAP;AACD;AACM,SAASN,sBAAT,CAAgCQ,OAAhC,EAAyCF,QAAzC,EAAmD;AACxD,SAAO,EAAEC,MAAMH,wBAAR,EAAkCE,kBAAlC,EAA4CE,gBAA5C,EAAP;AACD;AACM,SAASP,mBAAT,CAA6BQ,MAA7B,EAAqCH,QAArC,EAA+C;AACpD,SAAO,EAAEC,MAAMF,qBAAR,EAA+BC,kBAA/B,EAAyCG,cAAzC,EAAP;AACD;AACM,SAASP,cAAT,CAAwBI,QAAxB,EAAkC;AACvC,SAAO,oBAAY;AACjBI,aAASX,oBAAoBO,QAApB,CAAT;;AAEA,WAAO,qBAAM,0CAAqBA,QAArB,CAAN,EAAsC,EAACK,QAAQ,QAAT,EAAtC,EACJC,IADI,qCAEJA,IAFI,CAEC,gBAAe;AAAA,UAAbJ,OAAa,QAAbA,OAAa;;AACnBE,eAASV,uBAAuBQ,OAAvB,EAAgCF,QAAhC,CAAT;;AAEA;AACA,UAAIO,qBAAqB,4CAAzB;;AAEA;AACAH,eAAS,wCAAwBG,kBAAxB,CAAT;;AAEA;AACA,iDAAsBA,kBAAtB;AACD,KAbI,EAcJC,KAdI,CAcE;AAAA,UAAEL,MAAF,SAAEA,MAAF;AAAA,aAAcC,SAAST,oBAAoBQ,MAApB,EAA4BH,QAA5B,CAAT,CAAd;AAAA,KAdF,CAAP;AAeD,GAlBD;AAmBD","file":"destroy-account.js","sourceRoot":"/home/vagrant/projects/instrumental","sourcesContent":["import {getDestroyAccountUrl, setCurrentEndpointKey, getDefaultEndpointKey}  from \"../utils/session-storage\";\r\nimport {parseResponse} from \"../utils/handle-fetch-response\";\r\nimport {storeCurrentEndpointKey} from \"./configure\";\r\nimport fetch from \"../utils/fetch\";\r\n\r\nexport const DESTROY_ACCOUNT_START    = \"DESTROY_ACCOUNT_START\";\r\nexport const DESTROY_ACCOUNT_COMPLETE = \"DESTROY_ACCOUNT_COMPLETE\";\r\nexport const DESTROY_ACCOUNT_ERROR    = \"DESTROY_ACCOUNT_ERROR\";\r\n\r\nexport function destroyAccountStart(endpoint) {\r\n  return { type: DESTROY_ACCOUNT_START, endpoint };\r\n}\r\nexport function destroyAccountComplete(message, endpoint) {\r\n  return { type: DESTROY_ACCOUNT_COMPLETE, endpoint, message };\r\n}\r\nexport function destroyAccountError(errors, endpoint) {\r\n  return { type: DESTROY_ACCOUNT_ERROR, endpoint, errors };\r\n}\r\nexport function destroyAccount(endpoint) {\r\n  return dispatch => {\r\n    dispatch(destroyAccountStart(endpoint));\r\n\r\n    return fetch(getDestroyAccountUrl(endpoint), {method: \"delete\"})\r\n      .then(parseResponse)\r\n      .then(({message}) => {\r\n        dispatch(destroyAccountComplete(message, endpoint));\r\n\r\n        // revert current session endpoint to default\r\n        let defaultEndpointKey = getDefaultEndpointKey()\r\n\r\n        // set in store\r\n        dispatch(storeCurrentEndpointKey(defaultEndpointKey));\r\n\r\n        // and in session\r\n        setCurrentEndpointKey(defaultEndpointKey);\r\n      })\r\n      .catch(({errors}) => dispatch(destroyAccountError(errors, endpoint)));\r\n  };\r\n}\r\n"]}