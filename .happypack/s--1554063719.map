{"version":3,"sources":["src/routes/Songs/components/SongsList.js"],"names":["columnWidths","width","textAlign","SongsList","songsCollection","onSongClick","onSortClick","currentSong","bind","undefined","map","song","id","propTypes","arrayOf","shape","string","title","isRequired","func"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AAEA;;;;AACA;;;;;;AAGA,IAAMA,eAAe,CACnB,EAAEC,OAAO,KAAT,EAAgBC,WAAW,QAA3B,EADmB,EAEnB,EAAED,OAAO,KAAT,EAAgBC,WAAW,QAA3B,EAFmB,EAGnB,EAAED,OAAO,KAAT,EAAgBC,WAAW,QAA3B,EAHmB,EAInB,EAAED,OAAO,KAAT,EAAgBC,WAAW,QAA3B,EAJmB,CAArB;;AAOA,IAAMC,YAAY,SAAZA,SAAY;AAAA,MAAGC,eAAH,QAAGA,eAAH;AAAA,MAAoBC,WAApB,QAAoBA,WAApB;AAAA,MAAiCC,WAAjC,QAAiCA,WAAjC;AAAA,MAA8CC,WAA9C,QAA8CA,WAA9C;AAAA,SAChB;AAAA;AAAA;AACE,kBAAY,IADd;AAEE,mBAAaF;AAFf;AAIE;AAAA;AAAA;AACE,0BAAkB,KADpB;AAEE,2BAAmB;AAFrB;AAIE;AAAA;AAAA;AACE;AAAA;AAAA,YAAmB,OAAOL,aAAa,CAAb,CAA1B;AACE;AAAA;AAAA,cAAG,SAASM,YAAYE,IAAZ,CAAiBC,SAAjB,EAA4B,OAA5B,CAAZ;AAAA;AAEE;AAFF;AADF,SADF;AAOE;AAAA;AAAA,YAAmB,OAAOT,aAAa,CAAb,CAA1B;AACE;AAAA;AAAA,cAAG,SAASM,YAAYE,IAAZ,CAAiBC,SAAjB,EAA4B,QAA5B,CAAZ;AAAA;AAEE;AAFF;AADF,SAPF;AAaE;AAAA;AAAA,YAAmB,OAAOT,aAAa,CAAb,CAA1B;AACE;AAAA;AAAA,cAAG,SAASM,YAAYE,IAAZ,CAAiBC,SAAjB,EAA4B,UAA5B,CAAZ;AAAA;AAEE;AAFF;AADF,SAbF;AAmBE;AAAA;AAAA,YAAmB,OAAOT,aAAa,CAAb,CAA1B;AACE;AAAA;AAAA,cAAG,SAASM,YAAYE,IAAZ,CAAiBC,SAAjB,EAA4B,YAA5B,CAAZ;AAAA;AAEE;AAFF;AADF;AAnBF;AAJF,KAJF;AAmCE;AAAA;AAAA;AACE,sBAAc,IADhB;AAEE,6BAAqB,KAFvB;AAGE,qBAAa;AAHf;AAKGL,yBAAmBA,gBAAgBM,GAAhB,CAAoB;AAAA,eACtC;AACE,eAAKC,KAAKC,EADZ;AAEE,sBAAYD,IAFd;AAGE,wBAAcX,YAHhB;AAIE,oBAAUW,KAAKC,EAAL,KAAYL;AAJxB,UADsC;AAAA,OAApB;AALtB;AAnCF,GADgB;AAAA,CAAlB;;AAqDAJ,UAAUU,SAAV,GAAsB;AACpBT,mBAAiB,iBAAUU,OAAV,CACf,iBAAUC,KAAV,CAAgB;AACdH,QAAW,iBAAUI,MADP;AAEdC,WAAW,iBAAUD;AAFP,GAAhB,EAGGE,UAJY,CADG;AAMpBb,eAAa,iBAAUc,IAAV,CAAeD,UANR;AAOpBZ,eAAa,iBAAUa,IAAV,CAAeD,UAPR;AAQpBX,eAAa,iBAAUS,MAAV,CAAiBE;AARV,CAAtB;;kBAWgBf,S","file":"SongsList.js","sourceRoot":"/home/vagrant/projects/instrumental","sourcesContent":["import React, { PropTypes } from 'react';\nimport { Table, TableBody, TableHeader, TableHeaderColumn, TableRow } from 'material-ui/Table';\nimport SortIcon from 'react-icons/lib/md/import-export';\n\nimport Song from './Song';\nimport css from './SongList.scss';\n\n\nconst columnWidths = [\n  { width: '35%', textAlign: 'center' },\n  { width: '30%', textAlign: 'center' },\n  { width: '20%', textAlign: 'center' },\n  { width: '15%', textAlign: 'center' },\n];\n\nconst SongsList = ({ songsCollection, onSongClick, onSortClick, currentSong }) => (\n  <Table\n    selectable={true}\n    onCellClick={onSongClick}\n  >\n    <TableHeader\n      displaySelectAll={false}\n      adjustForCheckbox={false}\n    >\n      <TableRow>\n        <TableHeaderColumn style={columnWidths[0]}>\n          <a onClick={onSortClick.bind(undefined, 'title')}>\n            Title\n            <SortIcon />\n          </a>\n        </TableHeaderColumn>\n        <TableHeaderColumn style={columnWidths[1]}>\n          <a onClick={onSortClick.bind(undefined, 'artist')}>\n            Artist\n            <SortIcon />\n          </a>\n        </TableHeaderColumn>\n        <TableHeaderColumn style={columnWidths[2]}>\n          <a onClick={onSortClick.bind(undefined, 'progress')}>\n            Progress\n            <SortIcon />\n          </a>\n        </TableHeaderColumn>\n        <TableHeaderColumn style={columnWidths[3]}>\n          <a onClick={onSortClick.bind(undefined, 'difficulty')}>\n            Difficulty\n            <SortIcon />\n          </a>\n        </TableHeaderColumn>\n      </TableRow>\n    </TableHeader>\n    <TableBody\n      showRowHover={true}\n      deselectOnClickaway={false}\n      stripedRows={true}\n    >\n      {songsCollection && songsCollection.map(song =>\n        <Song\n          key={song.id}\n          songValues={song}\n          columnWidths={columnWidths}\n          selected={song.id === currentSong}\n        />\n      )}\n    </TableBody>\n  </Table>\n);\n\nSongsList.propTypes = {\n  songsCollection: PropTypes.arrayOf(\n    PropTypes.shape({\n      id:        PropTypes.string,\n      title:     PropTypes.string\n    }).isRequired),\n  onSongClick: PropTypes.func.isRequired,\n  onSortClick: PropTypes.func.isRequired,\n  currentSong: PropTypes.string.isRequired\n};\n\nexport default (SongsList);\n"]}