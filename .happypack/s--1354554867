"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require("babel-runtime/helpers/extends");

var _extends3 = _interopRequireDefault(_extends2);

var _getPrototypeOf = require("babel-runtime/core-js/object/get-prototype-of");

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require("babel-runtime/helpers/classCallCheck");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require("babel-runtime/helpers/createClass");

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require("babel-runtime/helpers/possibleConstructorReturn");

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require("babel-runtime/helpers/inherits");

var _inherits3 = _interopRequireDefault(_inherits2);

var _redboxReact2 = require("redbox-react");

var _redboxReact3 = _interopRequireDefault(_redboxReact2);

var _react2 = require("react");

var _react3 = _interopRequireDefault(_react2);

var _reactTransformCatchErrors3 = require("react-transform-catch-errors");

var _reactTransformCatchErrors4 = _interopRequireDefault(_reactTransformCatchErrors3);

var _class, _temp;

var _send = require("material-ui/svg-icons/content/send");

var _send2 = _interopRequireDefault(_send);

var _reactRedux = require("react-redux");

var _reduxForm = require("redux-form");

var _muiThemeable = require("material-ui/styles/muiThemeable");

var _muiThemeable2 = _interopRequireDefault(_muiThemeable);

var _ButtonLoader = require("./ButtonLoader");

var _ButtonLoader2 = _interopRequireDefault(_ButtonLoader);

var _Field = require("components/Field");

var _emailSignUp = require("store/auth/actions/email-sign-up");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _components = {
  EmailSignUpForm: {
    displayName: "EmailSignUpForm"
  }
};

var _reactTransformCatchErrors2 = (0, _reactTransformCatchErrors4.default)({
  filename: "/home/vagrant/projects/instrumental/src/routes/Register/components/EmailSignUpForm.js",
  components: _components,
  locals: [],
  imports: [_react3.default, _redboxReact3.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _reactTransformCatchErrors2(Component, id);
  };
}

var EmailSignUpForm = _wrapComponent("EmailSignUpForm")((_temp = _class = function (_React$Component) {
  (0, _inherits3.default)(EmailSignUpForm, _React$Component);

  function EmailSignUpForm() {
    (0, _classCallCheck3.default)(this, EmailSignUpForm);
    return (0, _possibleConstructorReturn3.default)(this, (EmailSignUpForm.__proto__ || (0, _getPrototypeOf2.default)(EmailSignUpForm)).apply(this, arguments));
  }

  (0, _createClass3.default)(EmailSignUpForm, [{
    key: "getEndpoint",
    value: function getEndpoint() {
      return this.props.endpoint || this.props.auth.getIn(["configure", "currentEndpointKey"]) || this.props.auth.getIn(["configure", "defaultEndpointKey"]);
    }
  }, {
    key: "handleSubmit",
    value: function handleSubmit(event) {
      console.log("@-->handling submit");
      event.preventDefault();

      var formData = this.props.registerForm.values;
      this.props.dispatch(this.props.emailSignUp(formData, this.getEndpoint())).then(this.props.next).catch(function () {});
    }
  }, {
    key: "render",
    value: function render() {
      var disabled = this.props.auth.getIn(["user", "isSignedIn"]) || this.props.auth.getIn(["emailSignUp", this.getEndpoint(), "loading"]);

      var errors = this.props.auth.getIn(["emailSignUp", this.getEndpoint(), "errors"]);

      return _react3.default.createElement(
        "form",
        { className: "redux-auth email-sign-up-form clearfix",
          style: { clear: "both", overflow: "hidden" },
          onSubmit: this.handleSubmit.bind(this) },
        _react3.default.createElement(
          "div",
          null,
          errors && errors.map(function (error) {
            return _react3.default.createElement(
              "p",
              null,
              error
            );
          })
        ),
        _react3.default.createElement(_reduxForm.Field, (0, _extends3.default)({
          component: _Field.RenderTextField,
          floatingLabelText: "Email",
          name: "email-sign-up-email",
          disabled: disabled
        }, this.props.inputProps.email)),
        _react3.default.createElement(_reduxForm.Field, (0, _extends3.default)({ type: "password",
          component: _Field.RenderTextField,
          floatingLabelText: "Password",
          name: "email-sign-up-password",
          disabled: disabled
        }, this.props.inputProps.password)),
        _react3.default.createElement(_reduxForm.Field, (0, _extends3.default)({ type: "password",
          component: _Field.RenderTextField,
          floatingLabelText: "Password Confirmation",
          name: "email-sign-up-password-confirmation",
          disabled: disabled
        }, this.props.inputProps.passwordConfirmation)),
        _react3.default.createElement(
          _ButtonLoader2.default,
          (0, _extends3.default)({
            loading: this.props.auth.getIn(["emailSignUp", this.getEndpoint(), "loading"]),
            type: "submit",
            name: "email-sign-up-submit",
            primary: true,
            style: { float: "right" },
            icon: _send2.default,
            disabled: disabled,
            onClick: this.handleSubmit.bind(this)
          }, this.props.inputProps.submit),
          "Sign Up"
        )
      );
    }
  }]);
  return EmailSignUpForm;
}(_react3.default.Component), _class.propTypes = {
  endpoint: _react2.PropTypes.string,
  next: _react2.PropTypes.func,
  emailSignUp: _react2.PropTypes.func,
  inputProps: _react2.PropTypes.shape({
    email: _react2.PropTypes.object,
    password: _react2.PropTypes.object,
    passwordConfirmation: _react2.PropTypes.object,
    submit: _react2.PropTypes.object
  })
}, _class.defaultProps = {
  next: function next() {},
  inputProps: {
    email: {},
    password: {},
    submit: {}
  }
}, _temp));

var mapStateToProps = function mapStateToProps(state) {
  return {
    auth: state.auth,
    registerForm: state.form.register,
    emailSignUp: _emailSignUp.emailSignUp
  };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps)((0, _muiThemeable2.default)()((0, _reduxForm.reduxForm)({ form: 'register' })(EmailSignUpForm)));