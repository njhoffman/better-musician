{"version":3,"sources":["src/store/createStore.js"],"names":["initialState","middleware","enhancers","composeEnhancers","__DEV__","composeWithDevToolsExtension","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","asyncReducers","unsubscribeHistory","listen","module","hot","accept","reducers","require","default","replaceReducer"],"mappings":";;;;;;AAAA;;AACA;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;kBAEe,YAAuB;AAAA,MAAtBA,YAAsB,uEAAP,EAAO;;;AAEpC;AACA,MAAMC,aAAa,sCAAiC,uCAAjC,CAAnB;;AAEA,MAAMC,YAAY,EAAlB;AACA,MAAIC,iCAAJ;;AAEA,MAAIC,OAAJ,EAAa;AACX,QAAMC,+BAA+BC,OAAOC,oCAA5C;AACA,QAAI,OAAOF,4BAAP,KAAwC,UAA5C,EAAwD;AACtDF,yBAAmBE,4BAAnB;AACD;AACF;;AAED,MAAMG,QAAQ,wBACZ,yBADY,EAEZL,mCACE,wCAAmBF,UAAnB,CADF,SAEKC,SAFL,EAFY,CAAd;AAOAM,QAAMC,aAAN,GAAsB,EAAtB;;AAEA;AACAD,QAAME,kBAAN,GAA2B,4BAAeC,MAAf,CAAsB,8BAAeH,KAAf,CAAtB,CAA3B;;AAEA,MAAII,OAAOC,GAAX,EAAgB;AACdD,WAAOC,GAAP,CAAWC,MAAX,CAAkB,YAAlB,EAAgC,YAAM;AACpC,UAAMC,WAAWC,QAAQ,YAAR,EAAsBC,OAAvC;AACAT,YAAMU,cAAN,CAAqBH,SAASP,MAAMC,aAAf,CAArB;AACD,KAHD;AAID;;AAED,SAAOD,KAAP;AAED,C","file":"createStore.js","sourceRoot":"/home/vagrant/projects/instrumental","sourcesContent":["import { applyMiddleware, compose, createStore } from 'redux';\nimport { browserHistory } from 'react-router';\nimport makeRootReducer from './reducers';\nimport { updateLocation } from './location';\nimport createLogger from 'redux-logger';\nimport apiMiddleware from 'middleware/api';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport thunkMiddleware from 'redux-thunk';\n\nexport default (initialState = {}) => {\n\n  // const middleware = [thunk, middlewareApi, createLogger()];\n  const middleware = [apiMiddleware, thunkMiddleware, promiseMiddleware()];\n\n  const enhancers = [];\n  let composeEnhancers = compose;\n\n  if (__DEV__) {\n    const composeWithDevToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n    if (typeof composeWithDevToolsExtension === 'function') {\n      composeEnhancers = composeWithDevToolsExtension;\n    }\n  }\n\n  const store = createStore(\n    makeRootReducer(),\n    composeEnhancers(\n      applyMiddleware(...middleware),\n      ...enhancers\n    )\n  );\n  store.asyncReducers = {};\n\n  // to unsubscribe, invoke `store.unsubscribeHistory()` anytime\n  store.unsubscribeHistory = browserHistory.listen(updateLocation(store));\n\n  if (module.hot) {\n    module.hot.accept('./reducers', () => {\n      const reducers = require('./reducers').default;\n      store.replaceReducer(reducers(store.asyncReducers));\n    });\n  }\n\n  return store;\n\n};\n"]}