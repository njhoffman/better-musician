"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UPDATE_PASSWORD_FORM_UPDATE = exports.UPDATE_PASSWORD_ERROR = exports.UPDATE_PASSWORD_COMPLETE = exports.UPDATE_PASSWORD_START = undefined;

var _stringify = require("babel-runtime/core-js/json/stringify");

var _stringify2 = _interopRequireDefault(_stringify);

exports.updatePasswordFormUpdate = updatePasswordFormUpdate;
exports.updatePasswordStart = updatePasswordStart;
exports.updatePasswordComplete = updatePasswordComplete;
exports.updatePasswordError = updatePasswordError;
exports.updatePassword = updatePassword;

var _sessionStorage = require("../utils/session-storage");

var _handleFetchResponse = require("../utils/handle-fetch-response");

var _fetch = require("../utils/fetch");

var _fetch2 = _interopRequireDefault(_fetch);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var UPDATE_PASSWORD_START = exports.UPDATE_PASSWORD_START = "UPDATE_PASSWORD_START";
var UPDATE_PASSWORD_COMPLETE = exports.UPDATE_PASSWORD_COMPLETE = "UPDATE_PASSWORD_COMPLETE";
var UPDATE_PASSWORD_ERROR = exports.UPDATE_PASSWORD_ERROR = "UPDATE_PASSWORD_ERROR";
var UPDATE_PASSWORD_FORM_UPDATE = exports.UPDATE_PASSWORD_FORM_UPDATE = "UPDATE_PASSWORD_FORM_UPDATE";

function updatePasswordFormUpdate(endpoint, key, value) {
  return { type: UPDATE_PASSWORD_FORM_UPDATE, endpoint: endpoint, key: key, value: value };
}
function updatePasswordStart(endpoint) {
  return { type: UPDATE_PASSWORD_START, endpoint: endpoint };
}
function updatePasswordComplete(endpoint, user) {
  return { type: UPDATE_PASSWORD_COMPLETE, endpoint: endpoint, user: user };
}
function updatePasswordError(endpoint, errors) {
  return { type: UPDATE_PASSWORD_ERROR, endpoint: endpoint, errors: errors };
}
function updatePassword(body, endpoint) {
  return function (dispatch) {
    dispatch(updatePasswordStart(endpoint));

    return (0, _fetch2.default)((0, _sessionStorage.getPasswordUpdateUrl)(endpoint), {
      headers: {
        "Accept": "application/json",
        "Content-Type": "application/json"
      },
      method: "put",
      body: (0, _stringify2.default)(body)
    }).then(_handleFetchResponse.parseResponse).then(function (_ref) {
      var user = _ref.user;
      return dispatch(updatePasswordComplete(endpoint, user));
    }).catch(function (_ref2) {
      var errors = _ref2.errors;
      return dispatch(updatePasswordError(endpoint, errors));
    });
  };
}