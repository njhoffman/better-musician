'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createRoutes = undefined;

var _CoreLayout = require('../layouts/CoreLayout/CoreLayout');

var _CoreLayout2 = _interopRequireDefault(_CoreLayout);

var _Home = require('./Home');

var _Home2 = _interopRequireDefault(_Home);

var _Songs = require('./Songs');

var _Songs2 = _interopRequireDefault(_Songs);

var _Settings = require('./Settings');

var _Settings2 = _interopRequireDefault(_Settings);

var _Profile = require('./Profile');

var _Profile2 = _interopRequireDefault(_Profile);

var _Reset = require('./Reset');

var _Reset2 = _interopRequireDefault(_Reset);

var _Login = require('./Login');

var _Login2 = _interopRequireDefault(_Login);

var _Register = require('./Register');

var _Register2 = _interopRequireDefault(_Register);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*  Note: Instead of using JSX, we recommend using react-router
    PlainRoute objects to build route definitions.   */

// We only need to import the modules necessary for initial render
var createRoutes = exports.createRoutes = function createRoutes(store) {
  return {
    path: '/',
    component: _CoreLayout2.default,
    indexRoute: (0, _Home2.default)(store),
    childRoutes: [(0, _Songs2.default)(store), (0, _Settings2.default)(store), (0, _Login2.default)(store), (0, _Register2.default)(store), (0, _Reset2.default)(store), (0, _Profile2.default)(store)]
  };
};

/*  Note: childRoutes can be chunked or otherwise loaded programmatically
    using getChildRoutes with the following signature:

    getChildRoutes (location, cb) {
      require.ensure([], (require) => {
        cb(null, [
          // Remove imports!
          require('./Counter').default(store)
        ])
      })
    }

    However, this is not necessary for code-splitting! It simply provides
    an API for async route definitions. Your code splitting should occur
    inside the route `getComponent` function, since it is only invoked
    when the route exists and matches.
*/

exports.default = createRoutes;