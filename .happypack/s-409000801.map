{"version":3,"sources":["src/components/ErrorList.js"],"names":["Colors","errorCount","props","errors","fromJS","size","errorWord","map","err","i","paddingLeft","position","red500","left","top","renderErrorList","Component","propTypes","object","defaultProps","ErrorList"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;IAAYA,M;;AACZ;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sCAWqB;AACjB,UAAIC,aAAa,CAAC,KAAKC,KAAL,CAAWC,MAAX,IAAqB,oBAAUC,MAAV,CAAiB,EAAjB,CAAtB,EAA4CC,IAA7D;;AAEA,UAAIJ,aAAa,CAAjB,EAAoB;AAClB;AACA,YAAIK,YAAY,OAAhB;AACAA,qBAAcL,eAAe,CAAhB,GAAqB,EAArB,GAA0B,GAAvC;;AAEA,eACE;AAAA;AAAA,YAAK,WAAU,WAAf;AACE;AAAA;AAAA;AAAA;AAAiCK,qBAAjC;AAAA;AAAA,WADF;AAEG,eAAKJ,KAAL,CAAWC,MAAX,CAAkBI,GAAlB,CAAsB,UAACC,GAAD,EAAMC,CAAN,EAAY;AACjC,mBACE;AAAA;AAAA;AACE,qBAAKA,CADP;AAEE,2BAAU,gCAFZ;AAGE,uBAAO,EAACC,aAAa,MAAd,EAAsBC,UAAU,UAAhC,EAHT;AAKE;AACE,yBAAQ,WADV;AAEE,uBAAOX,OAAOY,MAFhB;AAGE,uBAAO;AACLD,4BAAU,UADL;AAELE,wBAAM,CAFD;AAGLC,uBAAK,CAHA,EAHT,GALF;AAAA;AAWmBN;AAXnB,aADF;AAeD,WAhBA;AAFH,SADF;AAsBD,OA3BD,MA2BO;AACL,eACE;AAAA;AAAA,YAAG,OAAO,EAACE,aAAa,MAAd,EAAsBC,UAAU,UAAhC,EAAV;AACE;AACE,qBAAQ,WADV;AAEE,mBAAO;AACLA,wBAAU,UADL;AAELE,oBAAM,CAFD;AAGLC,mBAAK,CAHA,EAFT;AAME,mBAAOd,OAAOY,MANhB,GADF;AAAA;AAAA,SADF;AAYD;AACF;;;6BAES;AACR,aACE;AAAA;AAAA,UAAK,WAAU,oBAAf;AACG,aAAKG,eAAL;AADH,OADF;AAKD;;;EA7DqB,gBAAMC,S,UACrBC,S,GAAY;AACjBd,UAAQ,kBAAUe;AADD,C,SAIZC,Y,GAAe;AACpBhB,UAAQ,oBAAUC,MAAV,CAAiB,EAAjB;AADY,C;;kBA2DTgB,S","file":"ErrorList.js","sourceRoot":"/home/vagrant/projects/instrumental","sourcesContent":["import React, { PropTypes } from \"react\";\r\nimport * as Colors from \"material-ui/styles/colors\";\r\nimport AlertError from \"material-ui/svg-icons/alert/error\";\r\nimport Immutable from \"immutable\";\r\n\r\nclass ErrorList extends React.Component {\r\n  static propTypes = {\r\n    errors: PropTypes.object\r\n  };\r\n\r\n  static defaultProps = {\r\n    errors: Immutable.fromJS([])\r\n  };\r\n\r\n  renderErrorList () {\r\n    let errorCount = (this.props.errors || Immutable.fromJS([])).size;\r\n\r\n    if (errorCount > 0) {\r\n      // pluralize message\r\n      let errorWord = \"error\";\r\n      errorWord += (errorCount === 1) ? \"\" : \"s\";\r\n\r\n      return (\r\n        <div className=\"has-error\">\r\n          <p>Please correct the following {errorWord}:</p>\r\n          {this.props.errors.map((err, i) => {\r\n            return (\r\n              <p\r\n                key={i}\r\n                className=\"control-label modal-error-item\"\r\n                style={{paddingLeft: \"20px\", position: \"relative\"}}>\r\n\r\n                <AlertError\r\n                  viewBox=\"0 0 50 50\"\r\n                  color={Colors.red500}\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    left: 0,\r\n                    top: 3}} /> {err}\r\n              </p>\r\n            );\r\n          })}\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <p style={{paddingLeft: \"20px\", position: \"relative\"}}>\r\n          <AlertError\r\n            viewBox=\"0 0 50 50\"\r\n            style={{\r\n              position: \"absolute\",\r\n              left: 0,\r\n              top: 3}}\r\n            color={Colors.red500} /> There was an error processing this form.\r\n          Please check each field and try again.\r\n        </p>\r\n      );\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"auth-error-message\">\r\n        {this.renderErrorList()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ErrorList;\r\n"]}