{"version":3,"sources":["src/routes/Login/components/EmailSignInForm.js"],"names":["props","endpoint","auth","getIn","event","preventDefault","formData","loginForm","values","dispatch","getEndpoint","then","next","catch","disabled","errors","clear","overflow","handleSubmit","bind","map","error","inputProps","email","password","float","submit","Component","propTypes","string","func","emailSignIn","shape","object","defaultProps","mapStateToProps","state","form","login","EmailSignInForm"],"mappings":"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","file":"EmailSignInForm.js","sourceRoot":"/home/vagrant/projects/instrumental","sourcesContent":["import React, { PropTypes } from \"react\";\nimport ActionExitToApp from \"material-ui/svg-icons/action/exit-to-app\";\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from \"react-redux\";\nimport muiThemeable from 'material-ui/styles/muiThemeable';\n\nimport ButtonLoader from './ButtonLoader';\nimport { RenderTextField } from 'components/Field';\nimport { emailSignIn } from 'store/auth/actions/email-sign-in';\n\nclass EmailSignInForm extends React.Component {\n  static propTypes = {\n    endpoint: PropTypes.string,\n    next: PropTypes.func,\n    emailSignIn: PropTypes.func,\n    inputProps: PropTypes.shape({\n      email: PropTypes.object,\n      password: PropTypes.object,\n      submit: PropTypes.object\n    })\n  };\n\n  static defaultProps = {\n    next: () => {},\n    inputProps: {\n      email: {},\n      password: {},\n      submit: {}\n    }\n  };\n\n  getEndpoint () {\n    return (\n      this.props.endpoint ||\n      this.props.auth.getIn([\"configure\", \"currentEndpointKey\"]) ||\n      this.props.auth.getIn([\"configure\", \"defaultEndpointKey\"])\n    );\n  }\n\n  handleSubmit (event) {\n    event.preventDefault();\n    let formData = this.props.loginForm.values;\n    this.props.dispatch(emailSignIn(formData, this.getEndpoint()))\n      .then(this.props.next)\n      .catch(() => {});\n  }\n\n  render () {\n    let disabled = (\n      this.props.auth.getIn([\"user\", \"isSignedIn\"]) ||\n      this.props.auth.getIn([\"emailSignIn\", this.getEndpoint(), \"loading\"])\n    );\n\n    const errors = this.props.auth.getIn([\"emailSignIn\", this.getEndpoint(), \"errors\"]);\n\n    return (\n      <form className='redux-auth email-sign-in-form'\n        style={{clear: \"both\", overflow: \"hidden\"}}\n        onSubmit={this.handleSubmit.bind(this)}>\n        <div>\n          { errors && errors.map(error =>\n            <p>{error}</p>\n          )}\n        </div>\n        <Field\n          component={RenderTextField}\n          floatingLabelText=\"Email\"\n          name=\"email-sign-in-email\"\n          className=\"email-sign-in-email\"\n          ref=\"emailSignInEmail\"\n          disabled={disabled}\n          {...this.props.inputProps.email} />\n\n        <Field\n          component={RenderTextField}\n          floatingLabelText=\"Password\"\n          name=\"email-sign-in-password\"\n          className=\"email-sign-in-password\"\n          disabled={disabled}\n          {...this.props.inputProps.password} />\n\n        <ButtonLoader\n          loading={this.props.auth.getIn([\"emailSignIn\", \"loading\"])}\n          type=\"submit\"\n          style={{float: \"right\"}}\n          icon={ActionExitToApp}\n          className='email-sign-in-submit'\n          disabled={disabled}\n          onClick={this.handleSubmit.bind(this)}\n          primary={true}\n          {...this.props.inputProps.submit}>\n          Sign In\n        </ButtonLoader>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.auth,\n    loginForm: state.form.login,\n    emailSignIn: emailSignIn\n  };\n}\n\n\nexport default connect(mapStateToProps)( muiThemeable()(reduxForm({ form: 'login' })(EmailSignInForm)) );\n"]}