"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.REQUEST_PASSWORD_RESET_FORM_UPDATE = exports.REQUEST_PASSWORD_RESET_ERROR = exports.REQUEST_PASSWORD_RESET_COMPLETE = exports.REQUEST_PASSWORD_RESET_START = undefined;

var _stringify = require("babel-runtime/core-js/json/stringify");

var _stringify2 = _interopRequireDefault(_stringify);

exports.requestPasswordResetFormUpdate = requestPasswordResetFormUpdate;
exports.requestPasswordResetStart = requestPasswordResetStart;
exports.requestPasswordResetComplete = requestPasswordResetComplete;
exports.requestPasswordResetError = requestPasswordResetError;
exports.requestPasswordReset = requestPasswordReset;

var _sessionStorage = require("../utils/session-storage");

var _handleFetchResponse = require("../utils/handle-fetch-response");

var _extend = require("extend");

var _extend2 = _interopRequireDefault(_extend);

var _fetch = require("../utils/fetch");

var _fetch2 = _interopRequireDefault(_fetch);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var REQUEST_PASSWORD_RESET_START = exports.REQUEST_PASSWORD_RESET_START = "REQUEST_PASSWORD_RESET_START";
var REQUEST_PASSWORD_RESET_COMPLETE = exports.REQUEST_PASSWORD_RESET_COMPLETE = "REQUEST_PASSWORD_RESET_COMPLETE";
var REQUEST_PASSWORD_RESET_ERROR = exports.REQUEST_PASSWORD_RESET_ERROR = "REQUEST_PASSWORD_RESET_ERROR";
var REQUEST_PASSWORD_RESET_FORM_UPDATE = exports.REQUEST_PASSWORD_RESET_FORM_UPDATE = "REQUEST_PASSWORD_RESET_FORM_UPDATE";

function requestPasswordResetFormUpdate(endpoint, key, value) {
  return { type: REQUEST_PASSWORD_RESET_FORM_UPDATE, endpoint: endpoint, key: key, value: value };
}
function requestPasswordResetStart(endpoint) {
  return { type: REQUEST_PASSWORD_RESET_START, endpoint: endpoint };
}
function requestPasswordResetComplete(endpoint, message) {
  return { type: REQUEST_PASSWORD_RESET_COMPLETE, endpoint: endpoint, message: message };
}
function requestPasswordResetError(endpoint, errors) {
  return { type: REQUEST_PASSWORD_RESET_ERROR, endpoint: endpoint, errors: errors };
}
function requestPasswordReset(body, endpoint) {
  return function (dispatch) {
    dispatch(requestPasswordResetStart(endpoint));

    return (0, _fetch2.default)((0, _sessionStorage.getPasswordResetRequestUrl)(endpoint), {
      headers: {
        "Accept": "application/json",
        "Content-Type": "application/json"
      },
      method: "post",
      body: (0, _stringify2.default)((0, _extend2.default)(body, {
        redirect_url: (0, _sessionStorage.getPasswordResetRedirectUrl)(endpoint)
      }))
    }).then(_handleFetchResponse.parseResponse).then(function (_ref) {
      var message = _ref.message;
      return dispatch(requestPasswordResetComplete(endpoint, message));
    }).catch(function (_ref2) {
      var errors = _ref2.errors;
      return dispatch(requestPasswordResetError(endpoint, errors));
    });
  };
}