{"version":3,"sources":["src/components/Field.js"],"names":["RenderSelectField","input","label","children","meta","touched","error","custom","RenderTextField","state","value","props","textColor","color","setState","RenderSliderField"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;AASA,IAAMA,oBAAoB,SAApBA,iBAAoB;AAAA,MACrBC,KADqB;AAAA,MAExBC,KAFwB,QAExBA,KAFwB;AAAA,MAGxBC,QAHwB,QAGxBA,QAHwB;AAAA,uBAIxBC,IAJwB;AAAA,MAIhBC,OAJgB,aAIhBA,OAJgB;AAAA,MAIPC,KAJO,aAIPA,KAJO;AAAA,MAKrBC,MALqB;AAAA,SAMxB;AAAA;AAAA;AACE;AACE,yBAAmBL,KADrB;AAEE,iBAAWG,WAAWC,KAFxB;AAGE,gBAAUH,QAHZ;AAIE,aAAOF;AAJT,OAKMM,MALN;AADF,GANwB;AAAA,CAA1B;;AAiBA,IAAMC,kBAAkB,SAAlBA,eAAkB;AAAA,MACnBP,KADmB;AAAA,MAEtBC,KAFsB,SAEtBA,KAFsB;AAAA,MAGtBC,QAHsB,SAGtBA,QAHsB;AAAA,yBAItBC,IAJsB;AAAA,MAIdC,OAJc,cAIdA,OAJc;AAAA,MAILC,KAJK,cAILA,KAJK;AAAA,MAKnBC,MALmB;AAAA,SAMtB;AAAA;AAAA;AACE;AACE,yBAAmBL,KADrB;AAEE,iBAAWG,WAAWC;AAFxB,OAGML,KAHN,EAIMM,MAJN;AADF,GANsB;AAAA,CAAxB;;;;;;;;;;;;;;;;oOAkBEE,K,GAAQ;AACNC,aAAO;AADD,K;;;;;6BAIE;AAAA;;AAAA,mBAC2E,KAAKC,KADhF;AAAA,UACAV,KADA,UACAA,KADA;AAAA,UACOC,KADP,UACOA,KADP;AAAA,UACcU,SADd,UACcA,SADd;AAAA,UACyBT,QADzB,UACyBA,QADzB;AAAA,+BACmCC,IADnC;AAAA,UAC2CC,OAD3C,eAC2CA,OAD3C;AAAA,UACoDC,KADpD,eACoDA,KADpD;AAAA,UACgEC,MADhE;;AAER,aACE;AAAA;AAAA;AACE;AAAA;AAAA,YAAO,OAAO,EAACM,OAAOD,SAAR,EAAd;AAAA;AAAoCV,eAApC;AAAA;AAA4C,eAAKO,KAAL,CAAWC;AAAvD,SADF;AAEI;AACE,oBAAU,kBAACA,KAAD;AAAA,mBAAW,OAAKI,QAAL,CAAc,EAAEJ,OAAOA,KAAT,EAAd,CAAX;AAAA,WADZ;AAEE,iBAAO,KAAKD,KAAL,CAAWC,KAFpB;AAGE,wBAAc,KAAKD,KAAL,CAAWC,KAH3B;AAIE,iBAAOT;AAJT,WAKMM,MALN;AAFJ,OADF;AAYD;;;;;AACF;;QAEQP,iB,GAAAA,iB;QAAmBQ,e,GAAAA,e;QAAiBO,iB,GAAAA,iB","file":"Field.js","sourceRoot":"/home/vagrant/projects/instrumental","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport {\n  Checkbox,\n  RadioButtonGroup,\n  SelectField,\n  Slider,\n  TextField,\n  Toggle\n} from 'redux-form-material-ui'\n\nconst RenderSelectField = ({\n  ...input,\n  label,\n  children,\n  meta: { touched, error },\n  ...custom }) => (\n  <div>\n    <SelectField\n      floatingLabelText={label}\n      errorText={touched && error}\n      children={children}\n      input={input}\n      {...custom}\n    />\n  </div>\n);\n\nconst RenderTextField = ({\n  ...input,\n  label,\n  children,\n  meta: { touched, error },\n  ...custom }) => (\n  <div>\n    <TextField\n      floatingLabelText={label}\n      errorText={touched && error}\n      {...input}\n      {...custom}\n    />\n  </div>\n);\n\nclass RenderSliderField extends Component {\n\n  state = {\n    value: 1\n  };\n\n  render () {\n    const { input, label, textColor, children, meta: { touched, error }, ...custom } = this.props;\n    return (\n      <div>\n        <label style={{color: textColor}}> {label} {this.state.value}</label>\n          <Slider\n            onChange={(value) => this.setState({ value: value }) }\n            value={this.state.value}\n            defaultValue={this.state.value}\n            input={input}\n            {...custom}\n          />\n      </div>\n    )\n  }\n};\n\nexport { RenderSelectField, RenderTextField, RenderSliderField };\n"]}