{"version":3,"sources":["src/store/auth/reducers/configure.js"],"names":["A","initialState","fromJS","loading","errors","config","endpointKeys","defaultEndpointKey","currentEndpointKey","CONFIGURE_START","state","set","STORE_CURRENT_ENDPOINT_KEY","merge","SET_ENDPOINT_KEYS","CONFIGURE_COMPLETE","CONFIGURE_ERROR"],"mappings":";;;;;;;;;;;;AAAA;;;;AACA;;AACA;;IAAYA,C;;;;;;AAEZ,IAAMC,eAAe,oBAAUC,MAAV,CAAiB;AACpCC,WAAS,IAD2B;AAEpCC,UAAQ,IAF4B;AAGpCC,UAAQ,IAH4B;AAIpCC,gBAAc,IAJsB;AAKpCC,sBAAoB,IALgB;AAMpCC,sBAAoB;AANgB,CAAjB,CAArB;;kBASe,qCAAcP,YAAd,sEACZD,EAAES,eADU,EACQ;AAAA,SAASC,MAAMC,GAAN,CAAU,SAAV,EAAqB,IAArB,CAAT;AAAA,CADR,iDAGZX,EAAEY,0BAHU,EAGmB,UAACF,KAAD;AAAA,MAASF,kBAAT,QAASA,kBAAT;AAAA,SAAiCE,MAAMG,KAAN,CAAY,EAACL,sCAAD,EAAZ,CAAjC;AAAA,CAHnB,iDAKZR,EAAEc,iBALU,EAKU,UAACJ,KAAD;AAAA,MAASJ,YAAT,SAASA,YAAT;AAAA,MAAuBC,kBAAvB,SAAuBA,kBAAvB;AAAA,MAA2CC,kBAA3C,SAA2CA,kBAA3C;AAAA,SAAmEE,MAAMG,KAAN,CAAY;AACpGP,8BADoG,EACtFC,sCADsF,EAClEC;AADkE,GAAZ,CAAnE;AAAA,CALV,iDASZR,EAAEe,kBATU,EASW,UAACL,KAAD;AAAA,MAASL,MAAT,SAASA,MAAT;AAAA,SAAqBK,MAAMG,KAAN,CAAY;AACvDV,aAAS,KAD8C;AAEvDC,YAAQ,IAF+C;AAGvDC;AAHuD,GAAZ,CAArB;AAAA,CATX,iDAeZL,EAAEgB,eAfU,EAeQ,UAACN,KAAD;AAAA,MAASN,MAAT,SAASA,MAAT;AAAA,SAAqBM,MAAMG,KAAN,CAAY;AACpDV,aAAS,KAD2C;AAEpDC;AAFoD,GAAZ,CAArB;AAAA,CAfR,mB","file":"configure.js","sourceRoot":"/home/vagrant/projects/instrumental","sourcesContent":["import Immutable from \"immutable\";\r\nimport { createReducer } from \"redux-immutablejs\";\r\nimport * as A from \"../actions/configure\";\r\n\r\nconst initialState = Immutable.fromJS({\r\n  loading: true,\r\n  errors: null,\r\n  config: null,\r\n  endpointKeys: null,\r\n  defaultEndpointKey: null,\r\n  currentEndpointKey: null\r\n});\r\n\r\nexport default createReducer(initialState, {\r\n  [A.CONFIGURE_START]: state => state.set(\"loading\", true),\r\n\r\n  [A.STORE_CURRENT_ENDPOINT_KEY]: (state, {currentEndpointKey}) => state.merge({currentEndpointKey}),\r\n\r\n  [A.SET_ENDPOINT_KEYS]: (state, {endpointKeys, defaultEndpointKey, currentEndpointKey}) => state.merge({\r\n    endpointKeys, defaultEndpointKey, currentEndpointKey\r\n  }),\r\n\r\n  [A.CONFIGURE_COMPLETE]: (state, {config}) => state.merge({\r\n    loading: false,\r\n    errors: null,\r\n    config\r\n  }),\r\n\r\n  [A.CONFIGURE_ERROR]: (state, {errors}) => state.merge({\r\n    loading: false,\r\n    errors\r\n  })\r\n});\r\n"]}