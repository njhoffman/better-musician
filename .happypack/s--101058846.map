{"version":3,"sources":["src/store/auth/reducers/email-sign-in.js"],"names":["A","initialState","loading","errors","form","fromJS","state","endpoints","merge","reduce","coll","k","EMAIL_SIGN_IN_START","endpoint","setIn","EMAIL_SIGN_IN_COMPLETE","EMAIL_SIGN_IN_ERROR","mergeDeep","EMAIL_SIGN_IN_FORM_UPDATE","key","value"],"mappings":";;;;;;;;;;;;AAAA;;;;AACA;;AACA;;IAAYA,C;;AACZ;;;;;;AAEA,IAAMC,eAAe;AACnBC,WAAS,KADU;AAEnBC,UAAQ,IAFW;AAGnBC,QAAM;AAHa,CAArB;;kBAMe,qCAAc,oBAAUC,MAAV,CAAiB,EAAjB,CAAd,oGACQ,UAACC,KAAD;AAAA,MAASC,SAAT,QAASA,SAAT;AAAA,SAAwBD,MAAME,KAAN,CAAYD,UAAUE,MAAV,CAAiB,UAACC,IAAD,EAAOC,CAAP,EAAa;AACrFD,SAAKC,CAAL,IAAU,oBAAUN,MAAV,CAAiBJ,YAAjB,CAAV;AACA,WAAOS,IAAP;AACD,GAHwD,EAGtD,EAHsD,CAAZ,CAAxB;AAAA,CADR,iDAMZV,EAAEY,mBANU,EAMY,UAACN,KAAD;AAAA,MAASO,QAAT,SAASA,QAAT;AAAA,SAAuBP,MAAMQ,KAAN,CAAY,CAACD,QAAD,EAAW,SAAX,CAAZ,EAAmC,IAAnC,CAAvB;AAAA,CANZ,iDAQZb,EAAEe,sBARU,EAQe,UAACT,KAAD;AAAA,MAASO,QAAT,SAASA,QAAT;AAAA,SAAuBP,MAAME,KAAN,mCAAcK,QAAd,EAAyBZ,YAAzB,EAAvB;AAAA,CARf,iDAUZD,EAAEgB,mBAVU,EAUY,UAACV,KAAD;AAAA,MAASO,QAAT,SAASA,QAAT;AAAA,MAAmBV,MAAnB,SAAmBA,MAAnB;AAAA,SAA+BG,MAAMW,SAAN,mCACrDJ,QADqD,EAC1C;AACVX,aAAS,KADC;AAEVC;AAFU,GAD0C,EAA/B;AAAA,CAVZ,iDAiBZH,EAAEkB,yBAjBU,EAiBkB,UAACZ,KAAD,SAAmC;AAAA,MAA1BO,QAA0B,SAA1BA,QAA0B;AAAA,MAAhBM,GAAgB,SAAhBA,GAAgB;AAAA,MAAXC,KAAW,SAAXA,KAAW;;AAChE,SAAOd,MAAMW,SAAN,mCACJJ,QADI,EACO;AACVT,4CACGe,GADH,EACSC,KADT;AADU,GADP,EAAP;AAOD,CAzBY,mB","file":"email-sign-in.js","sourceRoot":"/home/vagrant/projects/instrumental","sourcesContent":["import Immutable from \"immutable\";\r\nimport { createReducer } from \"redux-immutablejs\";\r\nimport * as A from \"../actions/email-sign-in\";\r\nimport { SET_ENDPOINT_KEYS } from \"../actions/configure\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errors: null,\r\n  form: {}\r\n};\r\n\r\nexport default createReducer(Immutable.fromJS({}), {\r\n  [SET_ENDPOINT_KEYS]: (state, {endpoints}) => state.merge(endpoints.reduce((coll, k) => {\r\n    coll[k] = Immutable.fromJS(initialState);\r\n    return coll;\r\n  }, {})),\r\n\r\n  [A.EMAIL_SIGN_IN_START]: (state, {endpoint}) => state.setIn([endpoint, \"loading\"], true),\r\n\r\n  [A.EMAIL_SIGN_IN_COMPLETE]: (state, {endpoint}) => state.merge({[endpoint]: initialState}),\r\n\r\n  [A.EMAIL_SIGN_IN_ERROR]: (state, {endpoint, errors}) => state.mergeDeep({\r\n    [endpoint]: {\r\n      loading: false,\r\n      errors\r\n    }\r\n  }),\r\n\r\n  [A.EMAIL_SIGN_IN_FORM_UPDATE]: (state, {endpoint, key, value}) => {\r\n    return state.mergeDeep({\r\n      [endpoint]: {\r\n        form: {\r\n          [key]: value\r\n        }\r\n      }\r\n    });\r\n  }\r\n});\r\n"]}