@import 'base';
@import '~normalize.css/normalize';
@import '~typeface-roboto/index.css';

// Some best-practice CSS that's useful for most apps
// Just remove them if they're not what you want

html,
body {
  margin: 0;
  padding: 0;
  height: 100%;
	font-family: "Roboto", "Helvetica", "Arial", sans-serif;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}


// fixes incompatibility between normalize.css and material-ui
// https://github.com/callemall/material-ui/issues/4008
span[type=button] {
  appearance: none;
}
a[type=button] {
  appearance: none;
}

// negates foundation's table color setting
table tbody, table tfoot, table thead {
  border: none !important;
  background-color:inherit !important;
}

table {
  margin-bottom: 0;
}

// fix for autofill override transparent text fields
// http://stackoverflow.com/questions/2781549/removing-input-background-colour-for-chrome-autocomplete
input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
input:-webkit-autofill:active {
  transition: background-color 5000s ease-in-out 0s;
  -webkit-text-fill-color: white !important;
}

// draggable components, will need to include with devtools styling
.react-draggable, .cursor {
  cursor: move;
}
.no-cursor {
  cursor: auto;
}
.cursor-y {
  cursor: ns-resize;
}
.cursor-x {
  cursor: ew-resize;
}

// devtools

.action-preview {
  width: 30%;
  font-size: 0.75em;
  div[class*="actionPreviewContent-"] {
    max-height: 600px;
    height: auto;
    resize: vertical;
    ul {
      background-color: transparent !important;
      overflow-x: hidden;
      overflow-y: hidden;
    }
  }

  div[class^="actionList-"] {
    /* fancy scrollbars */
    overflow: auto;
    margin: 0 10px;

  }
  div[class^="actionListRows-"] {
    &::-webkit-scrollbar {
      width: 10px;
    }

    &::-webkit-scrollbar-thumb {
      // background: #222;
      background: #666;
      border-radius: 10px;
    }

    &::-webkit-scrollbar-track {
      // background: #666;
      background: #222;
      border-radius: 10px;
    }

    &::-webkit-scrollbar-button {
      // background: #222;
      background: #666;
      height: 15px;
      border-radius: 50%;
    }

    div[class*="actionListFromFuture-"] {
      opacity: 0.3;
    }
    div[class*="actionListItemSelected-"] {
      background-color: rgba(90, 120, 150, 0.25);
    }
  }
  span[class*="diffWrap-"] {
    span[class*="diffAdd-"] {
      // background-color: rgba(143, 157, 106, 0.4);
      background-color: rgba(143, 157, 106, 0.1);
      border: solid 1px rgba(143, 157, 106, 0.4);
    }
    span[class*="diffUpdateTo-"] {
      // background-color: rgba(143, 157, 106, 0.4);
      background-color: rgba(143, 157, 106, 0.1);
      border: solid 1px rgba(143, 157, 106, 0.4);
    }
    span[class*="diffUpdateFrom-"] {
      // background-color: rgba(207, 106, 76, 0.4);
      background-color: rgba(207, 106, 76, 0.1);
      border: solid 1px rgba(207, 106, 76, 0.4);
      text-decoration: line-through;
    }
    span[class*="diff-"] {
      padding: 1px 2px;
      border-radius: 2px;
      color: #c3c3c3;
    }
  }
}

.timeline-controls {
  .slider button {
    border: 0;
  }

  .slider div div label {
    font-size: 15px;
    top: 0.1em;
  }

  .slider button {
    min-height: 0px;
    line-height: 1.5em;
    height: 'fit-content';
  }
  .slider .playspeeds button {
    padding: '3px 6px';
  }
}

// #react-devtools-root
g.node.changed {
	fill: rgb(102, 217, 239);
	cursor: pointer;
	fill-opacity: 1;

  .nodeCircle {
    stroke: black;
    stroke-width: 1.5px;
    fill: rgb(166, 226, 46);
  }
  .nodeText {
		fill-opacity: 1;
  }
}

div.tooltip {
  font-size: 0.8em !important;
}
